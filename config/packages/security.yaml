security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    encoders:
        App\Entity\IcUsuario:
            algorithm: bcrypt
    role_hierarchy:
        ROLE_COORDINADOR: ROLE_USER
        ROLE_ADMIN: ROLE_COORDINADOR
        ROLE_SUPER_ADMIN: ROLE_ADMIN

    providers:
        my_provider:
            entity:
                class: App\Entity\IcUsuario
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
#### login form ####

        main:
            anonymous: true
            pattern: ^/*
            form_login:
                login_path: /login
                check_path: /login
                default_target_path: procesos_inicio
                provider: my_provider
                csrf_token_generator: security.csrf.token_manager
            logout:
                path: app_logout
                target: /login
            oauth:
                resource_owners:
                    facebook: "/login/check-facebook"
                    twitter: "/login/check-twitter"
                    google: "/login/check-google"
                login_path: /login
                use_forward: false
                failure_path: /

                oauth_user_provider:
                    service: my.oauth_aware.user_provider.service

            guard:
                authenticators:
                    - App\Security\LoginFromAuthenticator


#### end login form  ####


#### JWT config - Symfony 4.4 lts ####
        login:
            pattern:  ^/api/login
            stateless: true
            anonymous: true
            provider: my_provider
            json_login:
                check_path:               /api/login_check
                success_handler:          lexik_jwt_authentication.handler.authentication_success
                failure_handler:          lexik_jwt_authentication.handler.authentication_failure

        api:
            pattern:  ^/api
            stateless: true
            provider: my_provider
            guard:
                authenticators:
                     - lexik_jwt_authentication.jwt_token_authenticator

#Test config
#
# curl -X POST -H "Content-Type: application/json" https://127.0.0.1:8000/api/login_check -d '{"username":"mic","password":"realpassword"}'
#

#### end JWT Config ####

    access_control:
        - { path: ^/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/connect, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/backend/admin/*, role: [ROLE_ADMIN, ROLE_GERENTE, ROLE_DIRECTIVO, ROLE_COORDINADOR] }
#        - { path: ^/backend/admin/*, role: [ ROLE_USER, ROLE_COORDINADOR, ROLE_PROCESOS ] }

#        - { path: ^/api/*,       roles: [ROLE_FACEBOOK, ROLE_APP, ROLE_USER , ROLE_COORDINADOR] }
#        - { path: ^/login$, role: IS_AUTHENTICATED_ANONYMOUSLY }
#        - { path: ^/autorizacion/*, role: IS_AUTHENTICATED_ANONYMOUSLY }

#        - { path: ^/*, role: [ROLE_USER, ROLE_COORDINADOR ] }



